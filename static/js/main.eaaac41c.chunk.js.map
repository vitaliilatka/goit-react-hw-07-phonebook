{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","components/Container/Container.jsx","redux-js/contacts/contacts-actions.js","redux-js/contacts/contacts-operations.js","redux-js/contacts/contacts-selectors.js","redux-js/contacts/contacts-reducer.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","App.js","redux-js/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","actions","name","number","dispatch","a","contact","get","data","alert","post","then","catch","err","contactId","delete","getFilter","state","contacts","filter","getLoading","loading","getError","error","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","includes","createReducer","_","payload","id","combineReducers","initialState","connect","onSubmit","contactsOperations","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","type","pattern","title","required","placeholder","onChange","buttonForm","ContactListItem","onDeleteContact","tel","onClick","ContactList","map","contactsSelectors","Filter","input","defaultProps","contactsActions","target","Loader","spinner","color","height","width","isLoading","isError","fetchContacts","useEffect","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,KAAO,8BAA8B,IAAM,+B,mBCAxGD,EAAOC,QAAU,CAAC,WAAa,kC,mBCA/BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,QAAU,0B,yHCUbC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,8ECcxB,GACXI,oBAhBwBC,YAAa,gCAiBrCC,oBAhBwBD,YAAa,gCAiBrCE,kBAhBsBF,YAAa,8BAiBnCG,kBAfsBH,YAAa,8BAgBnCI,kBAfsBJ,YAAa,8BAgBnCK,gBAfoBL,YAAa,4BAgBjCM,qBAdyBN,YAAa,iCAetCO,qBAdyBP,YAAa,iCAetCQ,mBAduBR,YAAa,+BAepCS,aAbiBT,YAAa,0BCZlCU,IAAMC,SAASC,QAAU,wBAEzB,I,MACIb,EASAc,EATAd,oBACAE,EAQAY,EARAZ,oBACAC,EAOAW,EAPAX,kBACAC,EAMAU,EANAV,kBACAC,EAKAS,EALAT,kBACAC,EAIAQ,EAJAR,gBACAC,EAGAO,EAHAP,qBACAC,EAEAM,EAFAN,qBACAC,EACAK,EADAL,mBA0CW,EA7BI,SAACM,EAAMC,GAAP,8CAAkB,WAAMC,GAAN,qBAAAC,EAAA,6DAC3BC,EAAU,CAAEJ,OAAMC,UACxBC,EAASjB,KAFwB,kBAINW,IAAMS,IAAN,yBAA4BL,IAJtB,mBAIrBM,EAJqB,EAIrBA,MACJ,UAAAA,EAAK,UAAL,eAASN,QAASA,EALO,wBAMzBO,MAAM,GAAD,OAAIP,EAAJ,4BACLE,EAASf,KAPgB,2BAU7Be,EAASb,KACTO,IACKY,KAAK,YAAaJ,GAClBK,MAAK,gBAAGH,EAAH,EAAGA,KAAH,OAAcJ,EAASZ,EAAkBgB,OAC9CI,OAAM,SAAAC,GAAG,OAAIT,EAASX,EAAgBoB,OAdd,kDAgB7BT,EAASd,EAAkB,EAAD,KAhBG,0DAAlB,uDA6BJ,EATO,SAAAwB,GAAS,OAAI,SAAAV,GAC/BA,EAASV,KACTI,IACKiB,OADL,oBACyBD,IACpBH,MAAK,kBAAMP,EAAST,EAAqBmB,OACzCF,OAAM,SAAAC,GAAG,OAAIT,EAASR,EAAmBiB,SAInC,EAvCO,yDAAM,WAAMT,GAAN,iBAAAC,EAAA,6DACxBD,EAASjB,KADe,kBAGGW,IAAMS,IAAI,aAHb,gBAGZC,EAHY,EAGZA,KACRJ,EAASf,EAAoBmB,IAJT,gDAMpBJ,EAASd,EAAkB,EAAD,KANN,yDAAN,uD,QCbhB0B,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QAc3B,GACXC,WAjBe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAkBvCC,SAjBa,SAAAL,GAAK,OAAIA,EAAMC,SAASK,OAkBrCP,YACAQ,oBAfwBC,YACxB,CAHmB,SAAAR,GAAK,OAAIA,EAAMC,SAASQ,OAG1BV,IACjB,SAACE,EAAUC,GACP,IAAMQ,EAAmBR,EAAOS,cAChC,OAAOV,EAASC,QAAO,qBAAGjB,KACjB0B,cAAcC,SAASF,U,eCPpCxC,EAUAc,EAVAd,oBACAE,EASAY,EATAZ,oBACAC,EAQAW,EARAX,kBACAC,EAOAU,EAPAV,kBACAC,EAMAS,EANAT,kBACAC,EAKAQ,EALAR,gBACAC,EAIAO,EAJAP,qBACAC,EAGAM,EAHAN,qBACAC,EAEAK,EAFAL,mBACAC,EACAI,EADAJ,aAGE6B,EAAQI,YAAc,IAAD,mBACtBzC,GAAsB,SAAC0C,EAAD,YAAMC,WADN,cAEtBxC,GAAoB,SAACyB,EAAD,OAAUe,EAAV,EAAUA,QAAV,4BAA4Bf,GAA5B,CAAmCe,OAFjC,cAGtBrC,GAAuB,SAACsB,EAAD,OAAUe,EAAV,EAAUA,QAAV,OACpBf,EAAME,QAAO,qBAAGc,KAAgBD,QAJb,IAOrBb,EAASW,YAAc,GAAD,eACvBjC,GAAe,SAACkC,EAAD,YAAMC,YAGpBX,GAAUS,aAAc,GAAD,mBACxBvC,GAAoB,kBAAM,KADF,cAExBC,GAAoB,kBAAM,KAFF,cAGxBC,GAAkB,kBAAM,KAHA,cAIxBC,GAAuB,kBAAM,KAJL,cAKxBC,GAAuB,kBAAM,KALL,cAMxBC,GAAqB,kBAAM,KANH,cAOxBT,GAAsB,kBAAM,KAPJ,cAQxBE,GAAsB,kBAAM,KARJ,cASxBC,GAAoB,kBAAM,KATF,IAYvBiC,GAAQO,aAAc,GAAD,mBACtBvC,GAAoB,kBAAM,KADJ,cAEtBC,GAAoB,kBAAM,KAFJ,cAGtBC,GAAkB,kBAAM,KAHF,cAItBC,GAAuB,kBAAM,KAJP,cAKtBC,GAAuB,kBAAM,KALP,cAMtBC,GAAqB,kBAAM,KANL,cAOtBT,GAAsB,kBAAM,KAPN,cAQtBE,GAAsB,kBAAM,KARN,cAStBC,GAAoB,kBAAM,KATJ,IAYZ4C,eAAgB,CAAER,QAAOP,SAAQE,WAASE,W,oBC9CnDY,GAAe,CACjBjC,KAAM,GACNC,OAAQ,IA+DGiC,eAAQ,MAJI,SAAAhC,GAAQ,MAAK,CACpCiC,SAAU,SAACnC,EAAMC,GAAP,OAAkBC,EAASkC,EAA8BpC,EAAMC,QAG9DiC,EA5DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAAoCE,mBAASJ,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACQvC,EAAiBsC,EAAjBtC,KAAMC,EAAWqC,EAAXrC,OAERuC,EAAc,SAAAC,GAChB,MAAwBA,EAAEC,cAAlB1C,EAAR,EAAQA,KAAM2C,EAAd,EAAcA,MACdJ,EAAc,2BAAKD,GAAN,kBAAmBtC,EAAO2C,MAS3C,OACI,uBAAM7D,UAAWC,KAAO6D,KAAMT,SAPb,SAAAM,GACjBA,EAAEI,iBACFV,EAASnC,EAAMC,GACfsC,EAAcN,KAId,UACI,sCACA,kCACI,uBACIa,KAAK,OACL9C,KAAK,OACL2C,MAAO3C,EACP+C,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,YAAY,kBACZC,SAAUX,IAEd,0BAEJ,wCACA,kCACI,uBACIM,KAAK,MACL9C,KAAK,SACL2C,MAAO1C,EACP8C,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,YAAY,oBACZC,SAAUX,IAEd,0BAEJ,wBAAQM,KAAK,SAAShE,UAAWC,KAAOqE,WAAxC,+B,oBCnCGC,GAlBS,SAAC,GAA2C,IAAzCtB,EAAwC,EAAxCA,GAAI/B,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQqD,EAAsB,EAAtBA,gBACzC,OACI,qBAAIxE,UAAWC,KAAOqB,QAAtB,UACI,mBAAGtB,UAAWC,KAAOiB,KAArB,SAA4BA,IAC5B,mBAAGlB,UAAWC,KAAOwE,IAArB,SAA2BtD,IAC3B,wBAAQ6C,KAAK,SAASU,QAAS,kBAAMF,EAAgBvB,IAArD,wBCoBG0B,GAzBK,SAAC,GAAmC,IAAjCzC,EAAgC,EAAhCA,SAAUsC,EAAsB,EAAtBA,gBAC7B,OACI,6BACKtC,EAAS0C,KAAI,gBAAG3B,EAAH,EAAGA,GAAI/B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,cAAC,GAAD,CAEI8B,GAAIA,EACJ/B,KAAMA,EACNC,OAAQA,EACRqD,gBAAiBA,GAJZvB,SCIVG,gBARS,SAAAnB,GAAK,MAAK,CAC9BC,SAAU2C,EAAkBrC,oBAAoBP,OAGzB,SAAAb,GAAQ,MAAK,CACpCoD,gBAAiB,SAAAvB,GAAE,OAAI7B,EAASkC,EAAiCL,QAGtDG,CAA6CuB,I,oBCPtDG,GAAS,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,MAAOQ,EAAe,EAAfA,SACrB,OACI,mCACI,0DAEI,uBAAOrE,UAAWC,KAAO8E,MAAOf,KAAK,OAAOH,MAAOA,EAAOQ,SAAUA,UAMpFS,GAAOE,aAAe,CAClBnB,MAAO,IAQX,IAQeT,gBARS,SAAAnB,GAAK,MAAK,CAC9B4B,MAAOgB,EAAkB7C,UAAUC,OAGZ,SAAAb,GAAQ,MAAK,CACpCiD,SAAU,SAAAV,GAAC,OAAIvC,EAAS6D,EAAgBpE,aAAa8C,EAAEuB,OAAOrB,YAGnDT,CAA6C0B,I,wCClB7CK,GAZA,WACX,OACI,cAAC,KAAD,CACInF,UAAWC,KAAOmF,QAClBpB,KAAK,UACLqB,MAAM,OACNC,OAAQ,GACRC,MAAO,MC6BJnC,gBATS,SAAAnB,GAAK,MAAK,CAChCuD,UAAWX,EAAkBzC,WAAWH,GACxCwD,QAASZ,EAAkBvC,SAASL,OAGX,SAAAb,GAAQ,MAAK,CACtCsE,cAAe,kBAAMtE,EAASkC,SAGjBF,EA9BH,SAAC,GAA2C,IAAzCoC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAIjC,OAFAC,qBAAU,kBAAMD,MAAiB,IAG/B,eAAC,EAAD,WACE,2CACA,cAAC,GAAD,IACA,0CACA,cAAC,GAAD,IACCF,EACC,cAAC,GAAD,IACEC,EACF,qEAEA,cAAC,GAAD,U,QCbFG,GAAU,YACTC,YAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAcvDC,GATDC,YAAe,CACzBC,QAAS,CAAEtE,aACX0D,cACAa,UAAUC,I,YCbdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SAEE,cAAC,GAAD,QAIJQ,SAASC,eAAe,W","file":"static/js/main.eaaac41c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__2odom\",\"name\":\"ContactListItem_name__1m8kK\",\"tel\":\"ContactListItem_tel__RUr2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"ContactForm_buttonForm__2r8UK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__RF6JN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__y_xoe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__2LYth\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","// import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter,\r\n};","import axios from 'axios';\r\nimport actions from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} = actions;\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactRequest());\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error));\r\n    }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n    const contact = { name, number };\r\n    dispatch(fetchContactRequest());\r\n    try {\r\n        const { data } = await axios.get(`/contacts?name=${name}`);\r\n        if (data[0]?.name === name) {\r\n            alert(`${name} is already in contacts`);\r\n            dispatch(fetchContactSuccess());\r\n            return;\r\n        }\r\n        dispatch(addContactRequest());\r\n        axios\r\n            .post('/contacts', contact)\r\n            .then(({ data }) => dispatch(addContactSuccess(data)))\r\n            .catch(err => dispatch(addContactError(err)));\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error));\r\n    }\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n        .catch(err => dispatch(deleteContactError(err)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, fetchContacts };\r\n\r\n// const addContact = (name, number) => dispatch => {\r\n//   const contact = { name, number };\r\n//   dispatch(addContactRequest());\r\n//   axios\r\n//     .post('/contacts', contact)\r\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//     .catch(err => dispatch(addContactError(err)));\r\n// };","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getError = state => state.contacts.error;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    getLoading,\r\n    getError,\r\n    getFilter,\r\n    getFilteredContacts,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(false, {\r\n    [addContactRequest]: () => false,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => true,\r\n    [deleteContactRequest]: () => false,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => true,\r\n    [fetchContactRequest]: () => false,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => true,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading, error });","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations } from '../../redux-js/contacts';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    number: '',\r\n};\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const { name, number } = inputValue;\r\n\r\n    const changeInput = e => {\r\n        const { name, value } = e.currentTarget;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        setInputValue(initialState);\r\n    };\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n            <h3>Name</h3>\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    placeholder=\"Enter your name\"\r\n                    onChange={changeInput}\r\n                />\r\n                <br />\r\n            </label>\r\n            <h3>Number</h3>\r\n            <label>\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                    title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                    required\r\n                    placeholder=\"Enter your number\"\r\n                    onChange={changeInput}\r\n                />\r\n                <br />\r\n            </label>\r\n            <button type=\"submit\" className={styles.buttonForm}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        <li className={styles.contact}>\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tel}>{number}</p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactListItem\r\n                    key={id}\r\n                    id={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import { connect } from 'react-redux';\r\nimport ContactList from './ContactList';\r\nimport { contactsOperations, contactsSelectors } from '../../redux-js/contacts';\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: contactsSelectors.getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, contactsActions } from '../../redux-js/contacts';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <>\r\n            <label>\r\n                Find contacts by name\r\n                <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\r\n            </label>\r\n        </>\r\n    );\r\n};\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Spinner from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            className={styles.spinner}\r\n            type=\"Circles\"\r\n            color=\"#fff\"\r\n            height={40}\r\n            width={40}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Loader;","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Spinner from './components/Loader';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { contactsOperations, contactsSelectors } from './redux-js/contacts';\n\nconst App = ({ isLoading, isError, fetchContacts }) => {\n  // eslint-disable-next-line\n  useEffect(() => fetchContacts(), []);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading ? (\n        <Spinner />\n      ) : isError ? (\n        <p>Oops, we have some loading error! :(</p>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isLoading: contactsSelectors.getLoading(state),\n  isError: contactsSelectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport { contacts } from './contacts';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: { contacts },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux-js/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}